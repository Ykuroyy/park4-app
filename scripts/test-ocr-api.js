#!/usr/bin/env node

// Google Cloud Vision API „ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà
// Railway „Éá„Éó„É≠„Ç§Âæå„Å´„É≠„Ç∞„ÅßÂãï‰ΩúÁ¢∫Ë™çÁî®

const fs = require('fs');

console.log('üîç OCR API Test Script');
console.log('======================');

// Áí∞Â¢ÉÂ§âÊï∞„Çí„ÉÅ„Çß„ÉÉ„ÇØ
console.log('\nüìä Environment Variables:');
console.log(`GOOGLE_CLOUD_PROJECT_ID: ${process.env.GOOGLE_CLOUD_PROJECT_ID ? '‚úÖ Set' : '‚ùå Not set'}`);
console.log(`GOOGLE_APPLICATION_CREDENTIALS: ${process.env.GOOGLE_APPLICATION_CREDENTIALS ? '‚úÖ Set' : '‚ùå Not set'}`);
console.log(`NODE_ENV: ${process.env.NODE_ENV || 'development'}`);

// Google Cloud Vision API „ÅÆÂàùÊúüÂåñ„ÉÜ„Çπ„Éà
try {
  console.log('\nüîß Testing Google Cloud Vision API...');
  
  // OCRService „Çí„ÉÜ„Çπ„Éà
  const OCRService = require('../ocrService');
  const ocrService = new OCRService();
  
  console.log('‚úÖ OCRService initialized successfully');
  
  // APIÊé•Á∂ö„ÉÜ„Çπ„Éà
  if (process.env.GOOGLE_CLOUD_PROJECT_ID) {
    console.log(`‚úÖ Project ID: ${process.env.GOOGLE_CLOUD_PROJECT_ID}`);
  }
  
  if (process.env.GOOGLE_APPLICATION_CREDENTIALS) {
    try {
      const credentials = JSON.parse(process.env.GOOGLE_APPLICATION_CREDENTIALS);
      console.log(`‚úÖ Service Account: ${credentials.client_email || 'Unknown'}`);
      console.log(`‚úÖ Project from credentials: ${credentials.project_id || 'Unknown'}`);
    } catch (e) {
      console.log('‚ö†Ô∏è  Credentials format may be file path');
    }
  }
  
} catch (error) {
  console.error('‚ùå OCR API Test failed:', error.message);
}

console.log('\nüöÄ Test completed!');
console.log('If deployed on Railway, check the deployment logs.');
console.log('\nüìä Railway Environment Check:');
console.log('1. Check Railway dashboard -> Project -> Variables');
console.log('2. Verify GOOGLE_CLOUD_PROJECT_ID is set');
console.log('3. Verify GOOGLE_APPLICATION_CREDENTIALS contains valid JSON');
console.log('4. Check deployment logs for this script output');
console.log('\nüîç Access /debug/env endpoint to see environment status');